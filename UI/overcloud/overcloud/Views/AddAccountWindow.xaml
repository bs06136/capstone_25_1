<fw:AcrylicWindow x:Class="overcloud.Views.AddAccountWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:converters="clr-namespace:overcloud.Converters"
                 xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                 Title="계정 추가"
                 Height="360" Width="340"
                 WindowStartupLocation="CenterOwner"
                 AcrylicWindowStyle="None"
                 Background="Transparent"
                 Loaded="AddAccountWindow_Loaded">

    <fw:AcrylicWindow.Resources>
        <!-- Converters -->
        <converters:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>
        <converters:EmptySelectionToVisibilityConverter x:Key="EmptySelectionToVisibilityConverter"/>

        <!-- Acrylic Background Brush -->
        <fw:AcrylicBrush x:Key="AcrylicBG"
                         TintColor="White"
                         TintOpacity="0.3"
                         NoiseOpacity="0.02" />

        <!-- Rounded TextBox Style -->
        <Style x:Key="RoundTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Rounded PasswordBox Style -->
        <Style x:Key="RoundPasswordBox" TargetType="PasswordBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Rounded ComboBox Style -->
        <Style x:Key="RoundComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border x:Name="ComboBoxBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton"
                                              Template="{StaticResource ComboBoxToggleButton}"
                                              Grid.Column="2"
                                              Focusable="false"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter x:Name="ContentSite"
                                                  IsHitTestVisible="False"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  Margin="5,2,25,2"
                                                  VerticalAlignment="Center"/>
                                <Popup x:Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Slide">
                                    <Border x:Name="DropDown"
                                            Background="White"
                                            BorderBrush="#CCC"
                                            BorderThickness="1"
                                            CornerRadius="4"
                                            MinWidth="{TemplateBinding ActualWidth}"
                                            MaxHeight="200">
                                        <ScrollViewer Margin="4">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDown" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Rounded Button Style -->
        <Style x:Key="RoundButton" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F5F5F5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#E0E0E0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </fw:AcrylicWindow.Resources>

    <!-- Main Content -->
    <Border Background="{StaticResource AcrylicBG}"
            CornerRadius="6"
            Padding="15"
            Margin="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- ID Input -->
            <StackPanel Grid.Row="0" Margin="0,0,0,15">
                <TextBox x:Name="txtID" Style="{StaticResource RoundTextBox}" Height="40"/>
                <TextBlock Text="아이디 입력"
                           Foreground="Gray"
                           Margin="10,-30,0,0"
                           IsHitTestVisible="False"
                           Visibility="{Binding Text, ElementName=txtID, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
            </StackPanel>

            <!-- Password Input -->
            <StackPanel Grid.Row="1" Margin="0,0,0,15">
                <PasswordBox x:Name="txtPassword" Style="{StaticResource RoundPasswordBox}" Height="40"/>
                <TextBlock Text="비밀번호 입력"
                           Foreground="Gray"
                           Margin="10,-30,0,0"
                           IsHitTestVisible="False"
                           Visibility="{Binding Password, ElementName=txtPassword, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
            </StackPanel>

            <!-- Cloud Selection -->
            <StackPanel Grid.Row="2" Margin="0,0,0,15">
                <ComboBox x:Name="cloudComboBox"
                          Style="{StaticResource RoundComboBox}"
                          Height="40"
                          SelectedIndex="0">
                    <ComboBoxItem Content="GoogleDrive"/>
                    <ComboBoxItem Content="OneDrive"/>
                    <ComboBoxItem Content="Dropbox"/>
                </ComboBox>
            </StackPanel>

            <!-- Cooperation Account Selection -->
            <StackPanel Grid.Row="3" Margin="0,0,0,15" Visibility="{Binding ElementName=cooperationComboBox, Path=Visibility}">
                <ComboBox x:Name="cooperationComboBox"
                          Style="{StaticResource RoundComboBox}"
                          Height="40"
                          ItemsSource="{Binding CooperationAccounts}"/>
                <TextBlock Text="협업 계정 선택"
                           Foreground="Gray"
                           Margin="10,-30,0,0"
                           IsHitTestVisible="False"
                           Visibility="{Binding SelectedItem, ElementName=cooperationComboBox, Converter={StaticResource EmptySelectionToVisibilityConverter}}"/>
            </StackPanel>

            <!-- Confirm Button -->
            <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="취소" Width="100" Height="36" Style="{StaticResource RoundButton}" Margin="0,0,10,0" Click="Close_Click"/>
                <Button Content="확인" Width="100" Height="36" Style="{StaticResource RoundButton}" Click="Confirm_Click"/>
            </StackPanel>
        </Grid>
    </Border>
</fw:AcrylicWindow>
